var app = require('express')();
var http = require('http').Server(app);
var io = require('socket.io')(http);
var YouTube = require('youtube-node');
var youTube = new YouTube();
youTube.setKey('AIzaSyAeOVDwLCaSSKjDWf1gOGPJhKYal3ZHIP8');
youTube.addParam('videoDuration');
var moment = require('moment');
moment().format();
var request = require('request-json');
var client = request.createClient('http://localhost:8888/');
var Store = require("jfs");
var db = new Store("data");

var startTime;
findVideo();

app.get('/', function(req, res) {
  res.sendFile(__dirname + '/index.html');
});

io.on('connection', function(socket) {
	console.log('A user connected.');

  socket.on('video request', function() {
    console.log('Video request recieved.');
    db.get("currentVideo", function(err, obj) {
      var video = { id: obj.items[0].id, startTime: moment().diff(startTime, "seconds") };
      socket.emit('video', video);
    })
  });

  socket.on('chat message', function(msg){
  	io.emit('chat message', msg);
    console.log('Message: ' + msg);
  });

  socket.on('disconnect', function() {
    console.log('A user disconnected.');
  });

});

// Development
http.listen(3000, function() {
  console.log('Listening on *:3000.');
});

// Production
// http.listen(process.env.PORT, function() {
// 	console.log('Listening on *:' + process.env.PORT + '.');
// });

// ------------------ YOUHOLE ------------------

// Videos containing blacklisted words in their title or desciption won't be played.
var keywordBlacklist = ["pronounc", "say", "vocabulary", "spelling", "mean", "definition", "slideshow", "full", "ebook", "auto-generated by youtube", "amazon.com", "amazon.es", "amazon.co.uk", "bit.ly", "tukunen.org", "bitiiy.com", "http://po.st"];

// Videos with a higher view count than the threshold won't be played.
var viewCountThreshold = 500;

function getSearchSeed() {
  return 'donuts';
}

function findVideo() {
  var word = getSearchSeed();
  var requestStr = 'https://www.googleapis.com/youtube/v3/search?order=date&part=snippet&q=' + word + '&type=video&maxResults=50&key=AIzaSyAeOVDwLCaSSKjDWf1gOGPJhKYal3ZHIP8';
  client.get(requestStr, function(err, res, body) {
    findVideoCallback(body);
  });
}

function findVideoCallback(responseJSON) {
  if (responseJSON.items.length < 1) {
    findVideo();
  } else {
    var videoChoice = Math.floor(Math.random() * responseJSON.items.length);
    var videoId = responseJSON.items[videoChoice].id.videoId;
    var requestStr = "https://www.googleapis.com/youtube/v3/videos?part=snippet%2C+statistics&id=" + videoId + "&key=AIzaSyAeOVDwLCaSSKjDWf1gOGPJhKYal3ZHIP8";
    client.get(requestStr, function(err, res, body) {
      if(body.items[0].statistics.viewCount > viewCountThreshold) {
        findVideo();
      } /*else if(isBlacklisted(body.items[0].snippet.title, body.items[0].snippet.description)) {
        findVideo();
      }*/ else {
        playVideo(videoId);
      }
    });
  }
}

function playVideo(videoId) {
  youTube.getById(videoId, function(error, result) {
    if (error) {
      console.log(error);
    }
    else {
      duration = moment.duration(result.items[0].contentDetails.duration).asMilliseconds();
      console.log("Video length: " + duration + "ms");
      startTime = moment();
      setTimeout(findVideo, duration);
      var video = { id: videoId, startTime: 0 };
      io.emit('video', video);
      
      db.save("currentVideo", result, function(err) {
        if(err != null) {
          console.log('There was an error: ' + err);
        }
      });

    }
  });
}
